plugins {
    id 'multiloader-loader'
    id 'fabric-loom'
}
dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    include(implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-fabric:${mixinsquared_version}")))

    modImplementation 'com.electronwill.night-config:toml:3.8.1'
    include group: 'com.electronwill.night-config', name: 'toml', version: '3.8.1'
    include group: 'com.electronwill.night-config', name: 'core', version: '3.8.1'
}

loom {
    def aw = project(':common').file("src/main/resources/async.accesswidener")
    accessWidenerPath.set(project(":common").file("src/main/resources/async.accesswidener"))
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("async.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName('Fabric Client')
            ideConfigGenerated(true)
            runDir('runs/client')
        }
        server {
            server()
            setConfigName('Fabric Server')
            ideConfigGenerated(true)
            runDir('runs/server')
        }
    }
}